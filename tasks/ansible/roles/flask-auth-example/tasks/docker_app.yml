---

# Installing Docker debian
- name: docker_app | Check if Docker key exists
  ansible.builtin.stat:
    path: /etc/apt/keyrings/docker.gpg
  register: docker_gpg
  tags: docker_installation

- name: docker_app | Create APT keyring directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
    owner: root
    group: root
  when: ansible_facts.os_family == 'Debian'
  tags: docker_installation

- name: docker_app | Download docker armored signature
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/debian/gpg"
    dest: "/tmp/docker.asc"
    mode: "0755"
  when:
  - ansible_facts.os_family == 'Debian'
  - not docker_gpg.stat.exists
  become: true
  tags: docker_installation

- name: docker_app | Dearmor docker asc
  ansible.builtin.command: "gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg /tmp/docker.asc"
  when:
  - not docker_gpg.stat.exists
  - ansible_facts.os_family == 'Debian'
  become: true
  args:
    creates: /etc/apt/keyrings/docker.gpg
  tags: docker_installation

- name: docker_app | Add docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    update_cache: true
    filename: docker
  when: ansible_facts.os_family == 'Debian'
  tags: docker_installation

- name: docker_app | Install docker
  ansible.builtin.apt:
    name: "{{ docker_packages_map[ansible_facts.os_family] }}"
    state: present
    update_cache: true
  when: ansible_facts.os_family == 'Debian'
  tags: docker_installation
  notify: handlers | main | Restart docker
  become: true

- name: docker_app | Starting docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  tags: docker_installation
  when: ansible_facts.os_family == 'Debian'
  become: true

# Install docker Red Hat
- name: docker_app | Add Docker GPG key
  ansible.builtin.rpm_key:
    state: present
    key: "https://download.docker.com/linux/rhel/gpg"
  when: ansible_facts.os_family == 'RedHat'
  tags: docker_installation

- name: docker_app | Add Docker repository
  ansible.builtin.yum_repository:
    name: docker
    description: Docker CE Repository
    baseurl: "https://download.docker.com/linux/rhel/10/x86_64/stable"
    gpgcheck: true
    gpgkey: "https://download.docker.com/linux/rhel/gpg"
    enabled: true
  when: ansible_facts.os_family == 'RedHat'
  tags: docker_installation

- name: docker_app | Update Red Hat local repos
  ansible.builtin.dnf:
    update_cache: true
  become: true
  when: ansible_facts.os_family == 'RedHat'
  tags: package_installation

- name: docker_app | Install Docker packages
  ansible.builtin.package:
    name: "{{ docker_packages_map[ansible_facts.os_family] }}"
    state: present
  notify: handlers | main | Restart docker
  when: ansible_facts.os_family == 'RedHat'
  tags: docker_installation

# Setup containers
- name: docker_app | Enable docker
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  tags: docker_installation

- name: docker_app | Setup Dockerfile
  ansible.builtin.template:
    src: "Dockerfile.j2"
    dest: "{{ app_path }}/Dockerfile"
    owner: root
    mode: "0755"
  tags: setup_docker

- name: docker_app | Setup docker-compose
  ansible.builtin.template:
    src: "docker-compose.yml.j2"
    dest: "{{ app_path }}/docker-compose.yml"
    owner: root
    mode: "0755"
  tags: setup_docker

- name: docker_app | Setup nginx
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "{{ app_path }}/nginx.conf"
    owner: root
    mode: "0755"
  tags: setup_docker

- name: docker_app | Set up docker compose service
  ansible.builtin.template:
    src: "flask-auth-example-docker.service.j2"
    dest: "/etc/systemd/system/flask-auth-example-docker.service"
    owner: root
    mode: "0755"
  tags: setup_docker

- name: docker_app | Start app docker compose service
  ansible.builtin.systemd:
    name: "flask-auth-example-docker.service"
    state: started
    enabled: true
  tags: setup_docker

# - name: docker_app | Run app images
#   community.docker.docker_compose_v2:
#     project_src: "{{ app_path }}"
#     build: always
#     state: present
#     files:
#     - "{{ app_path }}/docker-compose.yml"
#   become: true
#   tags: setup_docker
